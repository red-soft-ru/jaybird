stages:
- prepare
- build
- test
- deploy

cache:
  paths:
    - .m2/repository/
    - target/

variables:
  RELEASE_HUB_PROJECT: jaybird
  CI_URL: ${CI_PROJECT_URL}/pipelines/${CI_PIPELINE_ID}
  TAG_BRANCH: branch_3_0
  MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode -U"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

.prepare_template: &prepare_template
  tags:
    - docker
    - builder
  stage: prepare
  image: redsoftru/relmanager_client
  script:
    - mkdir .ci
    - m4 -DVERSION=${VERSION} ci/artifacts.m4 > .ci/artifacts
    - echo ${VERSION} > .ci/version
    - echo ${BRANCH} > .ci/branch
    - echo ${CONTEXT} > .ci/context
  artifacts:
    expire_in: 1 day
    paths:
      - .ci/

prepare:snapshot:
  <<: *prepare_template
  before_script:
    - VERSION=$(mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec|sed 's/\(.*\)-.*/\1/')
    - export BUILDNO=$(relmanager_client genbuildno ${RELEASE_HUB_PROJECT} ${VERSION}-SNAPSHOT)
    - export VERSION=${VERSION}-SNAPSHOT.${BUILDNO}
    - export BRANCH=${CI_COMMIT_REF_NAME}
    - export CONTEXT=commit
  except:
    - tags

prepare:release:
  <<: *prepare_template
  before_script:
    - VERSION_IN_POM=$(mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)
    - export VERSION=$(echo ${CI_COMMIT_TAG}|sed 's/v//')
    - export BRANCH=${TAG_BRANCH}
    - export CONTEXT=tag
    - "[ \"$VERSION\" = \"$VERSION_IN_POM\" ] || (echo Project version in pom.xml and tag do not match!; exit 1)"
  only:
    - tags

.build_template: &build_template
  image: openjdk:8-jdk-alpine
  tags:
    - docker
    - builder
  stage: build
  before_script:
    - export VERSION=`cat .ci/version`
    - export BRANCH=`cat .ci/branch`
    - export CONTEXT=`cat .ci/context`
    - apk --update add maven

build:jdk18:
  <<: *build_template
  script:
    - mvn $MAVEN_CLI_OPTS package -Dmaven.test.skip.exec

.test_template: &test_template
  tags:
    - docker
    - tester
  stage: test
  artifacts:
    expire_in: 1 day
    paths:
      - results/**/*.xml
    reports:
      junit:
        - results/**/*.xml
  before_script:
    - yum install -y maven krb5-server krb5-workstation expect $EXTRA_DEPENDENCIES
    - /opt/cprocsp/sbin/amd64/cpconfig -license -set $LICENSE_CRYPTOPRO4
    - ./ci/configure_kerberos.sh
  script:
    - ./ci/test.sh

test:jdk18:rdb4:
  <<: *test_template
  variables:
    JDK_VERSION: 18
    JAVA_HOME: /usr/lib/jvm/jre-1.8.0
    RDB_VERSION: 4.0.0.1633
  image:
    name: registry.red-soft.biz:5000/docker-images/rdbtestenv/centos7:7.6.1810-cpro-4.0.9963-0

test:jdk18:rdb3:
  <<: *test_template
  variables:
    JDK_VERSION: 18
    JAVA_HOME: /usr/lib/jvm/jre-1.8.0
    RDB_VERSION: 3.0.4.75
    EXTRA_DEPENDENCIES: icu
  image:
    name: registry.red-soft.biz:5000/docker-images/rdbtestenv/centos7:7.6.1810-cpro-4.0.9963-0

test:jdk18:rdb2_6:
  <<: *test_template
  variables:
    JDK_VERSION: 18
    JAVA_HOME: /usr/lib/jvm/jre-1.8.0
    RDB_VERSION: 2.6.0.13485
    EXTRA_DEPENDENCIES: icu xinetd
  image:
    name: registry.red-soft.biz:5000/docker-images/rdbtestenv/centos7:7.6.1810-cpro-4.0.9963-0

test:jdk18:fb3:
  <<: *test_template
  variables:
    BINDIR: ${CI_PROJECT_DIR}/dist/jdk18
    JDK_VERSION: 18
    JAVA_HOME: /usr/lib/jvm/jre-1.8.0
    RDB_VERSION: FB3.0.4
    EXTRA_DEPENDENCIES: icu xinetd libtommath
  image:
    name: registry.red-soft.biz:5000/docker-images/rdbtestenv/centos7:7.6.1810-cpro-4.0.9963-0

deploy:
  <<: *build_template
  stage: deploy
  script:
    - mvn $MAVEN_CLI_OPTS deploy -Dmaven.test.skip.exec -Dreleasehub.build.version=$VERSION -Dreleasehub.build.context=${CONTEXT} -Dreleasehub.build.branch=${BRANCH} -Dreleasehub.build.commit=${CI_COMMIT_SHA} -Dreleasehub.build.ci_url=${CI_URL}
    - for p in jdk18_rdb2_6 jdk18_rdb3 jdk18_rdb4 jdk18_fb3; do mvn $MAVEN_CLI_OPTS --non-recursive releasehub-register:upload-tests -Dtest.report.dir=results/$p -Dtest.report.name=$p -Dreleasehub.build.version=$VERSION; done
    - mvn $MAVEN_CLI_OPTS --non-recursive releasehub-register:publish -Dreleasehub.build.version=$VERSION
