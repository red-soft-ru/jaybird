stages:
- prepare
- source_package
- build
- deploy

variables:
  RELEASE_HUB_PROJECT: jaybird
  CI_URL: ${CI_PROJECT_URL}/pipelines/${CI_PIPELINE_ID}
  CONTEXT: commit
  TAG_BRANCH: master

.prepare_template: &prepare_template
  stage: prepare
  image: redsoftru/relmanager_client
  script:
    - mkdir .ci
    - m4 -DVERSION=${VERSION} ci/artifacts.m4 > .ci/artifacts
    - echo ${VERSION} > .ci/version
    - echo ${BRANCH} > .ci/branch
  artifacts:
    expire_in: 1 day
    paths:
      - .ci/

prepare_snapshot:
  <<: *prepare_template
  before_script:
    - VERSION=$(cat build.properties|awk -F= '{if ($1 == "version.major") printf("%s.", $2); if ($1 == "version.minor") printf("%s.", $2); if ($1 == "version.revision") printf("%s", $2)}')
    - export BUILDNO=$(relmanager_client genbuildno ${RELEASE_HUB_PROJECT} ${VERSION}-SNAPSHOT)
    - export VERSION=${VERSION}-SNAPSHOT.${BUILDNO}
    - export BRANCH=${CI_COMMIT_REF_NAME}
  except:
    - tags

prepare_release:
  <<: *prepare_template
  before_script:
    - TAG=$(cat build.properties|grep version.tag=|awk -F- '{print $2}')
    - SVNTAG=$(cat build.properties|grep version.svntag|awk -F= '{print $2}')
    - "[ \"$(echo $VERSION|awk -F- '{print $2}')\" = \"$TAG\" ] || (echo Update version.tag!; exit 1)"
    - "[ \"$SVNTAG\" = \"$CI_COMMIT_REF_NAME\" ] || (Update version.svntag!; exit 1)"
    - export VERSION=$(echo ${CI_COMMIT_TAG}|sed 's/v//')
    - export BRANCH=${TAG_BRANCH}
  only:
    - tags

source_package:
  stage: source_package
  image: alpine:3.7
  before_script:
    - apk --update add bash git zip tar
    - git config --global user.name "Dummy Name"
    - git config --global user.email "dummy@email.org"
    - export VERSION=`cat .ci/version`
  script:
    - ./ci/dist-src.sh
  artifacts:
    expire_in: 1 day
    paths:
      - dist-src/

.build_template: &build_template
  stage: build
  before_script:
    - apk --update add apache-ant bash zip tar
    - export VERSION=`cat .ci/version`
    - archive_prefix=jaybird-${VERSION}
    - tar xf dist-src/${archive_prefix}.tar.gz
  script:
    - cd ${archive_prefix}
    - ./build.sh jars
    - ..
    - find
    - mkdir -p dist-${jdk}/{bin,sources,javadoc,test}
    - mv ${archive_prefix}/output/lib/jaybird-*javadoc* dist-${jdk}/javadoc
    - mv ${archive_prefix}/output/lib/jaybird-*sources* dist-${jdk}/sources
    - mv ${archive_prefix}/output/lib/jaybird-*test* dist-${jdk}/test
    - mv ${archive_prefix}/output/lib/* dist-${jdk}/bin
  artifacts:
    expire_in: 1 day
    paths:
      - dist-bin/

build-jdk18:
  <<: *build_template
  variables:
    jdk: 18
  image: openjdk:8-jdk-alpine
