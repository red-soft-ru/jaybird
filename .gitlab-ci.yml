stages:
- prepare
- sources
- build
- test
- deploy

variables:
  RELEASE_HUB_PROJECT: jaybird
  CI_URL: ${CI_PROJECT_URL}/pipelines/${CI_PIPELINE_ID}
  TAG_BRANCH: master

.prepare_template: &prepare_template
  tags:
    - docker
    - builder
  stage: prepare
  image: redsoftru/relmanager_client
  script:
    - mkdir .ci
    - m4 -DVERSION=${VERSION} ci/artifacts.m4 > .ci/artifacts
    - echo ${VERSION} > .ci/version
    - echo ${BRANCH} > .ci/branch
    - echo ${TAG} > .ci/tag
    - echo ${CONTEXT} > .ci/context
  artifacts:
    expire_in: 1 day
    paths:
      - .ci/

prepare:snapshot:
  <<: *prepare_template
  before_script:
    - VERSION=$(cat build.properties|awk -F= '{if ($1 == "version.major") printf("%s.", $2); if ($1 == "version.minor") printf("%s.", $2); if ($1 == "version.revision") printf("%s", $2)}')
    - export BUILDNO=$(relmanager_client genbuildno ${RELEASE_HUB_PROJECT} ${VERSION}-SNAPSHOT)
    - export TAG=SNAPSHOT.${BUILDNO}
    - export VERSION=${VERSION}-${TAG}
    - export BRANCH=${CI_COMMIT_REF_NAME}
    - export CONTEXT=commit
  except:
    - tags

prepare:release:
  <<: *prepare_template
  before_script:
    - export VERSION=$(echo ${CI_COMMIT_TAG}|sed 's/v//')
    - export BRANCH=${TAG_BRANCH}
    - export TAG=$(echo $VERSION|awk -F- '{print $2}')
    - export CONTEXT=tag
    - VERSIONTAG=$(cat build.properties|grep version.tag=|awk -F- '{print $2}')
    - SVNTAG=$(cat build.properties|grep version.svntag|awk -F= '{print $2}')
    - "[ \"$TAG\" = \"$VERSIONTAG\" ] || (echo Update version.tag in build.properties!; exit 1)"
    - "[ \"$SVNTAG\" = \"$CI_COMMIT_REF_NAME\" ] || (Update version.svntag in build.properties!; exit 1)"
  only:
    - tags

sources:
  tags:
    - docker
    - builder
  stage: sources
  image: alpine:3.7
  before_script:
    - apk --update add bash git zip tar
    - git config --global user.name "Dummy Name"
    - git config --global user.email "dummy@email.org"
    - export VERSION=`cat .ci/version`
    - export TAG=`cat .ci/tag`
  script:
    - ./ci/dist-src.sh
  artifacts:
    expire_in: 1 day
    paths:
      - dist-src/
  dependencies:
    - prepare:snapshot
    - prepare:release

.build_template: &build_template
  tags:
    - docker
    - builder
  stage: build
  before_script:
    - apk --update add apache-ant bash zip tar
    - export VERSION=`cat .ci/version`
    - archive_prefix=jaybird-${VERSION}
    - tar xf dist-src/${archive_prefix}.tar.gz
  script:
    - cd ${archive_prefix}
    - ./ci/build.sh
  artifacts:
    expire_in: 1 day
    paths:
      - dist/

build:jdk18:
  <<: *build_template
  image: openjdk:8-jdk-alpine

build:jdk17:
  <<: *build_template
  image: openjdk:7-jdk-alpine

test:jdk18:rdb4:
  tags:
    - docker
    - tester
  variables:
    BINDIR: ${CI_PROJECT_DIR}/dist/jdk18
    JDK_VERSION: 18
    JAVA_HOME: /usr/lib/jvm/jre-1.8.0
  image:
    name: registry.red-soft.biz:5000/docker-images/rdbtestenv/centos7:7.6.1810-cpro-4.0.9963-0
  stage: test
  before_script:
    - /opt/cprocsp/sbin/amd64/cpconfig -license -set $LICENSE_CRYPTOPRO4
    - yum install -y krb5-server krb5-workstation expect
    - ./ci/configure_kerberos.sh
    - export JAYBIRD_VERSION=`cat .ci/version`
    - export SRCDIR=`pwd`/jaybird-${JAYBIRD_VERSION}
    - export RDB_VERSION=4.0.0.1732
    - archive_prefix=jaybird-${JAYBIRD_VERSION}
    - tar xf dist-src/${archive_prefix}.tar.gz
  script:
    - cd ${archive_prefix}
    - ./ci/test.sh
  artifacts:
    expire_in: 1 day
    paths:
      - results
    reports:
      junit:
        - results/jdk${JDK_VERSION}_rdb4/TEST-*.xml
  dependencies:
    - prepare:snapshot
    - prepare:release
    - sources
    - build:jdk18

test:jdk18:rdb3:
  tags:
    - docker
    - tester
  variables:
    BINDIR: ${CI_PROJECT_DIR}/dist/jdk18
    JDK_VERSION: 18
    JAVA_HOME: /usr/lib/jvm/jre-1.8.0
  image:
    name: registry.red-soft.biz:5000/docker-images/rdbtestenv/centos7:7.6.1810-cpro-4.0.9963-0
  stage: test
  before_script:
    - /opt/cprocsp/sbin/amd64/cpconfig -license -set $LICENSE_CRYPTOPRO4
    - yum install -y krb5-server krb5-workstation expect icu
    - ./ci/configure_kerberos.sh
    - export JAYBIRD_VERSION=`cat .ci/version`
    - export SRCDIR=`pwd`/jaybird-${JAYBIRD_VERSION}
    - export RDB_VERSION=3.0.4.102
    - archive_prefix=jaybird-${JAYBIRD_VERSION}
    - tar xf dist-src/${archive_prefix}.tar.gz
  script:
    - cd ${archive_prefix}
    - ./ci/test.sh
  artifacts:
    expire_in: 1 day
    paths:
      - results
    reports:
      junit:
        - results/jdk${JDK_VERSION}_rdb3/TEST-*.xml
  dependencies:
    - prepare:snapshot
    - prepare:release
    - sources
    - build:jdk18

test:jdk18:rdb2_6:
  tags:
    - docker
    - tester
  variables:
    BINDIR: ${CI_PROJECT_DIR}/dist/jdk18
    JDK_VERSION: 18
    JAVA_HOME: /usr/lib/jvm/jre-1.8.0
  image:
    name: registry.red-soft.biz:5000/docker-images/rdbtestenv/centos7:7.6.1810-cpro-4.0.9963-0
  stage: test
  before_script:
    - /opt/cprocsp/sbin/amd64/cpconfig -license -set $LICENSE_CRYPTOPRO4
    - yum install -y krb5-server krb5-workstation expect icu xinetd
    - ./ci/configure_kerberos.sh
    - export JAYBIRD_VERSION=`cat .ci/version`
    - export SRCDIR=`pwd`/jaybird-${JAYBIRD_VERSION}
    - export RDB_VERSION=2.6.0.13485
    - archive_prefix=jaybird-${JAYBIRD_VERSION}
    - tar xf dist-src/${archive_prefix}.tar.gz
  script:
    - cd ${archive_prefix}
    - ./ci/test.sh
  artifacts:
    expire_in: 1 day
    paths:
      - results
    reports:
      junit:
        - results/jdk${JDK_VERSION}_rdb2_6/TEST-*.xml
  dependencies:
    - prepare:snapshot
    - prepare:release
    - sources
    - build:jdk18

deploy:
  tags:
    - docker
    - builder
  stage: deploy
  image: redsoftru/relmanager_client
  except:
    - tags
  script:
    - find dist*
    - relmanager_client deploy ${RELEASE_HUB_PROJECT} $(cat .ci/version) --artifacts .ci/artifacts --ci_url ${CI_URL} --context $(cat .ci/context) --branch $(cat .ci/branch) --commit ${CI_COMMIT_SHA}
  only:
    variables:
      - "$RELEASE_HUB_KEY"
